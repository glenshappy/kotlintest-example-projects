buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.50'
    id "com.moowork.node" version "1.3.1"
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

kotlin {

    js()
    jvm()

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib')
            }
        }
        commonTest {
            dependencies {
                implementation "io.kotlintest:kotlintest-core-metadata:4.0.2573-SNAPSHOT"
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
                implementation "io.kotlintest:kotlintest-runner-js-js:4.0.2573-SNAPSHOT"
            }
        }
        jvmTest {
            dependencies {
                implementation "io.kotlintest:kotlintest-runner-jvm-jvm:4.0.2573-SNAPSHOT"
                implementation "io.kotlintest:kotlintest-runner-junit5-jvm:4.0.2573-SNAPSHOT"
            }
        }
    }
}

compileKotlinJs.configure {
    kotlinOptions {
        moduleKind = 'commonjs'
    }
}

compileTestKotlinJs.configure {
    kotlinOptions {
        moduleKind = 'commonjs'
    }
}

task copyJsDependencies(type: Copy, dependsOn: compileTestKotlinJs) {
    from compileKotlinJs.destinationDir
    into "${buildDir}/node_modules"

    def configuration = configurations.jsTestRuntimeClasspath
    from(files {
        configuration.collect { File file ->
            file.name.endsWith(".jar")
                    ? zipTree(file.absolutePath).matching {
                include '*.js'
                include '*.js.map' }
                    : files()
        }
    }.builtBy(configuration))
}

node {
    download = true
}

task installQunit(type: NpmTask) {
    args = ['install', 'qunitjs']
}

task runQunit(type: NodeTask, dependsOn: [compileTestKotlinJs, copyJsDependencies, installQunit]) {
    script = file('node_modules/qunitjs/bin/qunit')
    args = [projectDir.toPath().relativize(file(compileTestKotlinJs.outputFile).toPath())]
}

task installMocha(type: NpmTask) {
    args = ['install', 'mocha']
}

task runMocha(type: NodeTask, dependsOn: [installMocha, compileTestKotlinJs, copyJsDependencies]) {
    script = file('node_modules/mocha/bin/mocha')
    args = ["kotlintest-plugin.js", compileTestKotlinJs.outputFile]
}

jsTest.dependsOn runMocha